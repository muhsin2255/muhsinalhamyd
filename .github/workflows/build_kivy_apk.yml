name: Build Kivy APK

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
              git python3-dev python3-venv libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
              libffi-dev libssl-dev zlib1g-dev autoconf automake libtool pkg-config ccache unzip \
              libncurses5-dev libncursesw5-dev libxml2-dev libxslt-dev libltdl-dev

      - name: Set up Android SDK and NDK
        run: |
          # Set environment variables
          export ANDROID_SDK_ROOT="${{ github.workspace }}/android-sdk"
          export ANDROID_NDK_HOME="$ANDROID_SDK_ROOT/ndk/25.2.9519653"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          
          # Create licenses directory
          mkdir -p "$ANDROID_SDK_ROOT/licenses"
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_SDK_ROOT/licenses/android-sdk-license"
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_SDK_ROOT/licenses/android-sdk-armeabi-v7a-license"
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_SDK_ROOT/licenses/android-sdk-preview-license"
          
          # Download and extract command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmd-tools.zip
          unzip -q cmd-tools.zip -d "$ANDROID_SDK_ROOT"
          mv "$ANDROID_SDK_ROOT/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools-temp"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools-temp" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          
          # Add to PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          
          # Accept licenses
          yes | sdkmanager --licenses > /dev/null
          
          # Install required packages
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653" > /dev/null

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install buildozer==1.5.0 cython==0.29.36 virtualenv

      - name: Create buildozer.spec
        run: |
          cat > buildozer.spec <<EOL
          [app]
          title = Milk Accountant
          package.name = milk_accountant
          package.domain = org.test
          source.dir = .
          source.include_exts = py,png,jpg,kv,atlas,ttf,json
          version = 1.0.0
          requirements = python3==3.9,kivy==2.3.0,requests==2.31.0,pycryptodomex==3.19.0,arabic_reshaper==3.0.0,python-bidi==0.4.2
          orientation = portrait
          icon.filename = %(source.dir)s/nykd.png
          android.api = 34
          android.minapi = 21
          android.target_api = 34
          android.archs = arm64-v8a, armeabi-v7a
          android.permissions = INTERNET, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE
          android.allow_backup = true
          android.wakelock = false
          android.accept_sdk_license = true
          p4a.branch = develop
          
          # SDK paths
          android.sdk_path = $ANDROID_SDK_ROOT
          android.ndk_path = $ANDROID_NDK_HOME
          EOL

      - name: Build APK
        run: |
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          buildozer -v android clean
          buildozer -v android debug
          
          # Check if APK was generated
          if [ ! -f bin/*.apk ]; then
              echo "::error::APK file was not generated!"
              exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: milk_accountant_apk
          path: bin/*.apk
          retention-days: 5

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build_logs
          path: |
            .buildozer
            *.log
          retention-days: 5
